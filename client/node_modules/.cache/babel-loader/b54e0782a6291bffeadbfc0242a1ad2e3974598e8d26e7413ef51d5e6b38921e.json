{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useContext } from 'react';\nimport '../Design/App.css';\nimport { HomeCustomer } from './Customer/HomeCustomer';\nimport { HomeCompany } from './Company/HomeCompany';\nimport HomeAdmin from './Admin/HomeAdmin';\nimport { fetchCompanyIdByEmail, fetchCustomerIdByEmail } from '../services/ServerService';\nimport { UserType } from '../Entitis.type';\nimport { CustomerContext } from '../contexts/AppContextCustomer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState(UserType.ADMINISTRATOR);\n  // const [loginToken, setLoginToken] = useState<string>(\"\");\n  const [logId, setLogId] = useState();\n  const {\n    loginToken,\n    setLoginToken\n  } = useContext(CustomerContext);\n  async function login20(email, password, userType) {\n    try {\n      await fetch('http://localhost:8080/login', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password,\n          userType: userType\n        }),\n        mode: 'cors',\n        method: 'POST'\n      }).then(data => data.text()).then(token => {\n        setLoginToken(token);\n        // console.log(token)\n        return loginToken;\n      }).catch(error => {\n        console.log(error);\n        return error;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  const login1 = useCallback(async event => {\n    event.preventDefault(); // prevent page refresh\n\n    await login20(email, password, userType);\n  }, [email, password, userType]);\n  const userHandler = () => {\n    if (loginToken === '' || loginToken === undefined) {\n      return null;\n    }\n    if (loginToken !== undefined && userType === 'ADMINISTRATOR' && logId === undefined) {\n      return /*#__PURE__*/_jsxDEV(HomeAdmin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    }\n    if (loginToken !== undefined && userType === 'CUSTOMER' && logId === undefined) {\n      // Use the fetchCustomerIdByEmail function to get the customer ID\n      fetchCustomerIdByEmail(email).then(id => setLogId(id));\n      return /*#__PURE__*/_jsxDEV(HomeCustomer, {\n        token: loginToken,\n        id: logId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }\n    if (loginToken !== undefined && userType === 'COMPANY' && logId === undefined) {\n      let idd = fetchCompanyIdByEmail(email).then(id => {\n        setLogId(id);\n        console.log(id);\n        localStorage.setItem('id', '');\n        return id;\n      });\n      console.log('irhu', idd, logId);\n      return /*#__PURE__*/_jsxDEV(HomeCompany, {\n        token: loginToken,\n        id: logId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 16\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: loginToken === '' ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: login1,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"userType:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: userType,\n        onChange: event => setUserType(event.target.value),\n        children: Object.values(UserType).map(userType => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: userType,\n          children: userType\n        }, userType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 28\n    }, this) : userHandler()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"6gbbG5lmfX7TvTmlzM3wY3c9l6k=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useCallback","useContext","HomeCustomer","HomeCompany","HomeAdmin","fetchCompanyIdByEmail","fetchCustomerIdByEmail","UserType","CustomerContext","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","userType","setUserType","ADMINISTRATOR","logId","setLogId","loginToken","setLoginToken","login20","fetch","headers","body","JSON","stringify","mode","method","then","data","text","token","catch","error","console","log","login1","event","preventDefault","userHandler","undefined","fileName","_jsxFileName","lineNumber","columnNumber","id","idd","localStorage","setItem","className","children","onSubmit","type","value","onChange","target","Object","values","map","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/Login.tsx"],"sourcesContent":["import { useState, useCallback, FormEvent, useContext } from 'react';\nimport '../Design/App.css'\nimport { HomeCustomer } from './Customer/HomeCustomer';\nimport { HomeCompany } from './Company/HomeCompany';\nimport HomeAdmin from './Admin/HomeAdmin';\nimport { fetchCompanyIdByEmail, fetchCustomerIdByEmail, Login2 } from '../services/ServerService';\nimport { UserType } from '../Entitis.type';\nimport { CustomerContext } from '../contexts/AppContextCustomer';\n\n\n  \n  function Login(): JSX.Element {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [userType, setUserType] = useState<UserType>(UserType.ADMINISTRATOR);\n    // const [loginToken, setLoginToken] = useState<string>(\"\");\n    const [logId, setLogId] = useState<number | undefined>();\n    const { loginToken, setLoginToken } = useContext(CustomerContext);\n\n    async function login20(email: string, password: string, userType: UserType): Promise<any> {\n      \n      try {\n        await fetch('http://localhost:8080/login', {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            userType: userType,\n          }),\n          mode: 'cors',\n          method: 'POST',\n        })\n        .then((data) => data.text())\n        .then((token) => {\n          setLoginToken(token);\n          // console.log(token)\n          return loginToken;\n        })\n        .catch((error) => {console.log(error)\n        return error;\n        })\n      }\n      catch(error){\n        console.log(error)\n      }\n    }\n    \n\n    const login1 = useCallback(async (event: FormEvent<HTMLFormElement>): Promise<void> => {\n      event.preventDefault(); // prevent page refresh\n      \n      await login20(email, password, userType);\n     \n    }, [email, password, userType]);\n  \n    const userHandler = () => {\n     \n      if (loginToken === '' || loginToken === undefined) {\n        return null;\n      }\n  \n      if (loginToken !== undefined && userType === 'ADMINISTRATOR' && logId === undefined) {\n        \n        return (\n          <HomeAdmin />\n        )\n      }\n\n      if (loginToken !== undefined && userType === 'CUSTOMER' && logId === undefined) {\n        // Use the fetchCustomerIdByEmail function to get the customer ID\n        fetchCustomerIdByEmail(email).then(id => setLogId(id));\n        return (<HomeCustomer token={loginToken} id={logId} />)\n      }\n\n      if (loginToken !== undefined && userType === 'COMPANY' && logId === undefined) {\n       \n        let idd = fetchCompanyIdByEmail(email).then((id) => {\n          setLogId(id);\n          console.log(id)\n          localStorage.setItem('id', '')\n          return id\n        });\n\n        console.log('irhu',idd, logId)\n        return <HomeCompany token={loginToken} id={logId} />;\n      }\n\n      return null;\n    }\n  return (\n\n    <div className=\"login\">\n      {loginToken === '' ? <form onSubmit={login1}>\n        <label>Email: </label>\n        <input type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} /><br />\n        <label>Password: </label>\n        <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} /><br />\n        <label>userType:</label>\n        <select value={userType} onChange={(event) => setUserType(event.target.value as UserType)}>\n          {Object.values(UserType).map((userType) => (\n            <option key={userType} value={userType}>\n              {userType}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Login</button>\n      </form>\n        :\n        userHandler()\n      }\n\n    </div>\n  );\n}\n\nexport default Login;\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}