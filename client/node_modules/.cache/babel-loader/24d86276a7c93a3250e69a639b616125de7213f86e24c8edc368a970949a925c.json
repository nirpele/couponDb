{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\Admin\\\\UpdateCustomer\\\\UpdateCustomer.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateCompany(props) {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const customerId = parseInt(id);\n  const [customer, setCusomer] = useState({\n    id: customerId,\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    coupons: []\n  });\n  const updateCompany = event => {\n    event.preventDefault(); // prevent page refresh\n    console.log(props.token);\n    fetch('http://localhost:8080/admin/customer/update', {\n      //move to env var\n      method: 'POST',\n      headers: {\n        Authorization: props.token,\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify(customer)\n    }).then(response => {\n      if (response.ok) {\n        setMessage('Company added successfully!');\n        setTimeout(() => {\n          navigate(-1);\n        }, 2000);\n      } else {\n        setMessage('Failed to add company');\n      }\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdateCompany\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        value: customer.firstName,\n        onChange: event => setCusomer(prev => ({\n          ...prev,\n          firstName: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 151\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"last Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"name\",\n        value: customer.lastName,\n        onChange: event => setCusomer(prev => ({\n          ...prev,\n          lastName: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 149\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: customer.email,\n        onChange: event => setCusomer(prev => ({\n          ...prev,\n          email: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 144\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: customer.password,\n        onChange: event => setCusomer(prev => ({\n          ...prev,\n          password: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 153\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: updateCompany,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateCompany, \"afCMM98t7LoohK49564E+ZjF8Jw=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UpdateCompany;\nexport default UpdateCompany;\nvar _c;\n$RefreshReg$(_c, \"UpdateCompany\");","map":{"version":3,"names":["useState","useNavigate","useParams","jsxDEV","_jsxDEV","UpdateCompany","props","_s","navigate","id","customerId","parseInt","customer","setCusomer","firstName","lastName","email","password","coupons","updateCompany","event","preventDefault","console","log","token","fetch","method","headers","Authorization","mode","body","JSON","stringify","then","response","ok","setMessage","setTimeout","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","prev","target","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/Admin/UpdateCustomer/UpdateCustomer.tsx"],"sourcesContent":["\r\nimport { Company, Customer } from '../../../Entitis.type';\r\nimport { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\n\r\ninterface Props {\r\n  token: string;\r\n}\r\n\r\nfunction UpdateCompany(props: Props): JSX.Element {\r\n\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<{ id: any }>();\r\n  const customerId=parseInt(id)\r\n  const [customer,setCusomer] = useState<Customer>({ id:customerId, firstName: '',lastName:'', email: '',password:'',coupons:[] }); \r\n\r\n  const updateCompany =(event: React.MouseEvent): void => {\r\n      event.preventDefault(); // prevent page refresh\r\n      console.log(props.token);\r\n\r\n      fetch('http://localhost:8080/admin/customer/update', { //move to env var\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: props.token,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors',\r\n        body: JSON.stringify(customer),\r\n      }).then((response) => {\r\n        if (response.ok) {\r\n          setMessage('Company added successfully!');\r\n          setTimeout(() => {\r\n            navigate(-1);\r\n          }, 2000);\r\n        } else {\r\n          setMessage('Failed to add company');\r\n        }\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <div className=\"UpdateCompany\">\r\n          <button onClick={() => navigate(-1)}>Back</button> {/* add \"Back\" button */}\r\n      <form>\r\n        <label>First Name: </label>\r\n        <input type=\"name\" value={customer.firstName} onChange={(event) => setCusomer((prev: any) => ({ ...prev, firstName: event.target.value }))} /><br/>\r\n        <label>last Name: </label>\r\n        <input type=\"name\" value={customer.lastName} onChange={(event) => setCusomer((prev: any) => ({ ...prev, lastName: event.target.value }))} /><br/>\r\n        <label>Email: </label>\r\n        <input type=\"email\" value={customer.email} onChange={(event) => setCusomer((prev: any) => ({ ...prev, email: event.target.value }))} /><br/>\r\n        <label>Password: </label>\r\n        <input type=\"password\" value={customer.password} onChange={(event) => setCusomer((prev: any) => ({ ...prev, password: event.target.value }))} /><br/>\r\n        <button type=\"button\" onClick={updateCompany}>Update</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateCompany;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}