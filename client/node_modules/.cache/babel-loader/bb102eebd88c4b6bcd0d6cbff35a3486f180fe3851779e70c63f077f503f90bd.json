{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\HomeAdmin.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomeAdmin = props => {\n  _s();\n  const [company, setCompany] = useState([]);\n  console.log(props.token);\n  useEffect(() => {\n    fetch('http://localhost:8080/admin/company/all', {\n      method: 'GET',\n      headers: {\n        'Authorization': props.token,\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(res => res.json()).then(data => {\n      setCompany(data);\n      console.log(data); // log response data to console\n    }).catch(error => console.log(error));\n  }, []); // add empty array to run useEffect only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coin-app\",\n    children: company.map(companys => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, companys.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: `${companys.name} ${companys.email}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: companys.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeAdmin, \"2INVmbK3VTBBvCNV+f/SXe5SHkQ=\");\n_c = HomeAdmin;\nexport default HomeAdmin;\nvar _c;\n$RefreshReg$(_c, \"HomeAdmin\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","HomeAdmin","props","_s","company","setCompany","console","log","token","fetch","method","headers","mode","then","res","json","data","catch","error","className","children","map","companys","id","fileName","_jsxFileName","lineNumber","columnNumber","name","email","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/HomeAdmin.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Company } from './Entitis.type';\r\nimport { useState, useEffect, useCallback } from 'react';\r\n\r\ntype Props = {\r\n  token: string\r\n};\r\nconst HomeAdmin = (props: Props) => {\r\n\r\n  const [company, setCompany] = useState<Array<Company>>([]);\r\n  console.log(props.token);\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/admin/company/all', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization':  props.token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      mode: 'cors'\r\n    }).then((res) => res.json()).then((data) => {\r\n    setCompany(data)\r\n      console.log(data); // log response data to console\r\n    }).catch((error) => console.log(error));\r\n  }, []); // add empty array to run useEffect only once on component mount\r\n\r\n  return (\r\n    <div className='coin-app'>\r\n          {\r\n      \r\n          company.map((companys) => {\r\n          return (\r\n            <>\r\n            <tr key={companys.id}></tr>\r\n            <td>{`${companys.name} ${companys.email}`}</td>\r\n              <td>{companys.email}</td>\r\n              <td>c</td>\r\n              </>\r\n        )\r\n      })}\r\n    </div>\r\n \r\n  )\r\n}\r\n\r\nexport default HomeAdmin;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKzD,MAAMC,SAAS,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAElC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAiB,EAAE,CAAC;EAC1DW,OAAO,CAACC,GAAG,CAACL,KAAK,CAACM,KAAK,CAAC;EACxBZ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,yCAAyC,EAAE;MAC/CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAGT,KAAK,CAACM,KAAK;QAC7B,cAAc,EAAE;MAClB,CAAC;MACDI,IAAI,EAAE;IACR,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;MAC5CX,UAAU,CAACW,IAAI,CAAC;MACdV,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAKZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,UAAU;IAAAC,QAAA,EAGnBhB,OAAO,CAACiB,GAAG,CAAEC,QAAQ,IAAK;MAC1B,oBACExB,OAAA,CAAAE,SAAA;QAAAoB,QAAA,gBACAtB,OAAA,WAASwB,QAAQ,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAC3B7B,OAAA;UAAAsB,QAAA,EAAM,GAAEE,QAAQ,CAACM,IAAK,IAAGN,QAAQ,CAACO,KAAM;QAAC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC7C7B,OAAA;UAAAsB,QAAA,EAAKE,QAAQ,CAACO;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACzB7B,OAAA;UAAAsB,QAAA,EAAI;QAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,gBACP;IAEX,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAGV,CAAC;AAAAxB,EAAA,CAnCKF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}