{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\LogIn1\\\\LogIn1.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport '../../Design/Login.css';\nimport { HomeCustomer } from '../Customer/HomeCustomer/HomeCustomer';\nimport { HomeCompany } from '../Company/HomeCompany/HomeCompany';\nimport HomeAdmin from '../Admin/HomeAdmin/HomeAdmin';\nimport { fetchCompanyIdByEmail, fetchCustomerIdByEmail } from '../../services/ServerService';\nimport { UserType } from '../../Entitis.type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LogIn1() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState(UserType.ADMINISTRATOR);\n  const [loginToken, setLoginToken] = useState('');\n  const [logId, setLogId] = useState();\n  const login = useCallback(async event => {\n    event.preventDefault();\n    await fetch('http://localhost:8080/login', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        userType: userType\n      }),\n      mode: 'cors',\n      method: 'POST'\n    }).then(data => data.text()).then(token => {\n      setLoginToken(token);\n      console.log(token);\n    }).catch(error => console.log(error));\n  }, [email, userType, password]);\n  const userHandler = () => {\n    if (loginToken !== '' && userType === 'ADMINISTRATOR') {\n      if (loginToken !== 'user details not valid') {\n        return /*#__PURE__*/_jsxDEV(HomeAdmin, {\n          token: loginToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }, this)\n        //<HomeAdmin />\n        ;\n      }\n    }\n\n    if (loginToken !== '' && userType === 'CUSTOMER') {\n      if (loginToken !== 'user details not valid') {\n        // Use the fetchCustomerIdByEmail function to get the customer ID\n        fetchCustomerIdByEmail(email).then(id => setLogId(id));\n        return /*#__PURE__*/_jsxDEV(HomeCustomer, {\n          token: loginToken,\n          id: logId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this);\n      }\n    }\n    if (loginToken !== '' && userType === 'COMPANY') {\n      if (loginToken !== 'user details not valid') {\n        fetchCompanyIdByEmail(email).then(id => setLogId(id));\n        return /*#__PURE__*/_jsxDEV(HomeCompany, {\n          token: loginToken,\n          id: logId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(LogIn1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: loginToken === '' ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"userType:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: userType,\n        onChange: event => setUserType(event.target.value),\n        children: Object.values(UserType).map(userType => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: userType,\n          children: userType\n        }, userType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 28\n    }, this) : userHandler()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(LogIn1, \"FKiKsMgBsd1twe9sDau2TOzuS4U=\");\n_c = LogIn1;\nexport default LogIn1;\nvar _c;\n$RefreshReg$(_c, \"LogIn1\");","map":{"version":3,"names":["useState","useCallback","HomeCustomer","HomeCompany","HomeAdmin","fetchCompanyIdByEmail","fetchCustomerIdByEmail","UserType","jsxDEV","_jsxDEV","LogIn1","_s","email","setEmail","password","setPassword","userType","setUserType","ADMINISTRATOR","loginToken","setLoginToken","logId","setLogId","login","event","preventDefault","fetch","headers","body","JSON","stringify","mode","method","then","data","text","token","console","log","catch","error","userHandler","fileName","_jsxFileName","lineNumber","columnNumber","id","className","children","onSubmit","type","value","onChange","target","Object","values","map","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/LogIn1/LogIn1.tsx"],"sourcesContent":["import { useState, useCallback, FormEvent, useContext } from 'react';\r\nimport '../../Design/Login.css'\r\nimport { HomeCustomer } from '../Customer/HomeCustomer/HomeCustomer';\r\nimport { HomeCompany } from '../Company/HomeCompany/HomeCompany';\r\nimport HomeAdmin from '../Admin/HomeAdmin/HomeAdmin';\r\nimport { fetchCompanyIdByEmail, fetchCustomerIdByEmail } from '../../services/ServerService';\r\nimport { UserType } from '../../Entitis.type';\r\n\r\n\r\nfunction LogIn1(): JSX.Element {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userType, setUserType] = useState<UserType>(UserType.ADMINISTRATOR);\r\n  const [loginToken, setLoginToken] = useState('')\r\n  const [logId, setLogId] = useState<number | undefined>();\r\n\r\n  const login = useCallback(async (event: FormEvent<HTMLFormElement>): Promise<void> => {\r\n\r\n    event.preventDefault();\r\n\r\n    await fetch('http://localhost:8080/login', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        userType: userType,\r\n      }),\r\n      mode: 'cors',\r\n      method: 'POST',\r\n    })\r\n      .then((data) => data.text())\r\n      .then((token) => {\r\n        setLoginToken(token);\r\n        console.log(token)\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, [email, userType, password]);\r\n\r\n  const userHandler = () => {\r\n\r\n    if (loginToken !== '' && userType === 'ADMINISTRATOR') {\r\n      if (loginToken !== 'user details not valid') {\r\n        return (\r\n           <HomeAdmin token={loginToken}  />\r\n          //<HomeAdmin />\r\n        )\r\n      }\r\n    }\r\n    if (loginToken !== '' && userType === 'CUSTOMER') {\r\n      if (loginToken !== 'user details not valid') {\r\n        // Use the fetchCustomerIdByEmail function to get the customer ID\r\n        fetchCustomerIdByEmail(email).then(id => setLogId(id));\r\n        return (<HomeCustomer token={loginToken} id={logId} />)\r\n      }\r\n    }\r\n    if (loginToken !== '' && userType === 'COMPANY') {\r\n      if (loginToken !== 'user details not valid') {\r\n        fetchCompanyIdByEmail(email).then(id => setLogId(id));\r\n        return <HomeCompany token={loginToken} id={logId} />;\r\n      }\r\n    }\r\n    return <LogIn1/>;\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"login\">\r\n      {loginToken === '' ? <form onSubmit={login}>\r\n        <label>Email: </label>\r\n        <input type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n        <label>Password: </label>\r\n        <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} />\r\n        <label>userType:</label>\r\n        <select value={userType} onChange={(event) => setUserType(event.target.value as UserType)}>\r\n          {Object.values(UserType).map((userType) => (\r\n            <option key={userType} value={userType}>\r\n              {userType}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n        :\r\n        userHandler()\r\n      }\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogIn1;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}