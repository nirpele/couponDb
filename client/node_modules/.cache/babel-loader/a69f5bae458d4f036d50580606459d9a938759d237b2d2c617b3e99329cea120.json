{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\Admin\\\\GetAllCompanys.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../../Design/GetAllCompanys.css';\nimport { Route, useNavigate } from 'react-router-dom';\nimport UpdateCompany from './UpdateCompany';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetAllCompanys = props => {\n  _s();\n  const navigate = useNavigate();\n  // //context.type\n  const [company, setCompany] = useState([]);\n  console.log(props.token);\n  useEffect(() => {\n    fetch('http://localhost:8080/admin/company/all', {\n      method: 'GET',\n      headers: {\n        'Authorization': props.token,\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(res => res.json()).then(data => {\n      setCompany(data);\n      console.log(data); // log response data to console\n    }).catch(error => console.log(error));\n  }, []); // add empty array to run useEffect only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"getAllCompanys\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: company.map(companys => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                navigate(`/updateCompany/${companys.id}`);\n              },\n              children: companys.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: `/updateCompany/:id`,\n              element: /*#__PURE__*/_jsxDEV(UpdateCompany, {\n                token: props.token,\n                id: companys.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: companys.coupons.map(coupons => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: coupons.category && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: coupons.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 46\n                  }, this)\n                }, coupons.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: companys.coupons.map(coupons => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: coupons.price && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: coupons.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 43\n                  }, this)\n                }, coupons.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, companys.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(GetAllCompanys, \"eqiG0VYVoFJvFRBYAL76rr1c/KY=\", false, function () {\n  return [useNavigate];\n});\n_c = GetAllCompanys;\nexport default GetAllCompanys;\nvar _c;\n$RefreshReg$(_c, \"GetAllCompanys\");","map":{"version":3,"names":["useState","useEffect","Route","useNavigate","UpdateCompany","jsxDEV","_jsxDEV","GetAllCompanys","props","_s","navigate","company","setCompany","console","log","token","fetch","method","headers","mode","then","res","json","data","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","companys","id","name","path","element","coupons","category","price","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/Admin/GetAllCompanys.tsx"],"sourcesContent":["import { Company } from '../../Entitis.type';\r\nimport { useState, useEffect } from 'react';\r\nimport '../../Design/GetAllCompanys.css'\r\nimport { Route, useNavigate } from 'react-router-dom';\r\nimport UpdateCompany from './UpdateCompany';\r\n\r\n\r\n\r\ntype Props = {\r\n  token: string\r\n\r\n};\r\nconst GetAllCompanys = (props: Props) => {\r\n  const navigate = useNavigate();\r\n  // //context.type\r\n  const [company, setCompany] = useState<Array<Company>>([]);\r\n  console.log(props.token);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/admin/company/all', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': props.token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      mode: 'cors'\r\n    }).then((res) => res.json()).then((data) => {\r\n      setCompany(data)\r\n      console.log(data); // log response data to console\r\n    }).catch((error) => console.log(error));\r\n  }, []); // add empty array to run useEffect only once on component mount\r\n\r\n  \r\n  return (\r\n    <div className=\"getAllCompanys\">\r\n      <button onClick={() => navigate(-1)}>Back</button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Company Name</th>\r\n            <th>Category</th>\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {company.map((companys) => {\r\n            return (\r\n              <tr key={companys.id}>\r\n                <button onClick={() => {navigate(`/updateCompany/${companys.id}`);}}>{companys.name}</button>\r\n                <Route path={`/updateCompany/:id`} element={<UpdateCompany token={props.token} id={companys.id} />} />\r\n                <td>\r\n                  {companys.coupons.map((coupons) => {\r\n                    return (\r\n                      <div key={coupons.id}>\r\n                        {coupons.category && <div>{coupons.category}</div>}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </td>\r\n                <td>\r\n                  {companys.coupons.map((coupons) => {\r\n                    return (\r\n                      <div key={coupons.id}>\r\n                        {coupons.price && <div>{coupons.price}</div>}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default GetAllCompanys;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}