{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\Admin\\\\GetAllCompanys.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetAllCompanys = props => {\n  _s();\n  // //context.type\n  const [company, setCompany] = useState([]);\n  console.log(props.token);\n  useEffect(() => {\n    fetch('http://localhost:8080/admin/company/all', {\n      method: 'GET',\n      headers: {\n        'Authorization': props.token,\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(res => res.json()).then(data => {\n      setCompany(data);\n      console.log(data); // log response data to console\n    }).catch(error => console.log(error));\n  }, []); // add empty array to run useEffect only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"getAllCompanys\",\n    children: company.map(companys => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"coupon\"\n        }, companys.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: companys.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: companys.coupons.map(coupons => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: coupons.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 48\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: coupons.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(GetAllCompanys, \"2INVmbK3VTBBvCNV+f/SXe5SHkQ=\");\n_c = GetAllCompanys;\nexport default GetAllCompanys;\nvar _c;\n$RefreshReg$(_c, \"GetAllCompanys\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","GetAllCompanys","props","_s","company","setCompany","console","log","token","fetch","method","headers","mode","then","res","json","data","catch","error","className","children","map","companys","id","fileName","_jsxFileName","lineNumber","columnNumber","name","coupons","category","price","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/Admin/GetAllCompanys.tsx"],"sourcesContent":["import { Company } from '../../Entitis.type';\r\nimport { useState, useEffect } from 'react';\r\n\r\ntype Props = {\r\n  token: string\r\n};\r\nconst GetAllCompanys = (props: Props) => {\r\n\r\n  // //context.type\r\n  const [company, setCompany] = useState<Array<Company>>([]);\r\n  console.log(props.token);\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/admin/company/all', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': props.token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      mode: 'cors'\r\n    }).then((res) => res.json()).then((data) => {\r\n      setCompany(data)\r\n      console.log(data); // log response data to console\r\n    }).catch((error) => console.log(error));\r\n  }, []); // add empty array to run useEffect only once on component mount\r\n\r\n  return (\r\n    <div className='getAllCompanys'>{\r\n      company.map((companys) => {\r\n          return (\r\n            <>\r\n              <tr key={companys.id} className='coupon'></tr><br />\r\n              <td>{companys.name}</td><br />\r\n              <td>{companys.coupons.map((coupons) => {\r\n                return (\r\n                  <>\r\n                    <td>{coupons.category}</td><br />\r\n                    <td>{coupons.price}</td><br />\r\n                  </>\r\n                )\r\n              })}</td>\r\n            </>\r\n          )\r\n        })}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default GetAllCompanys;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAK5C,MAAMC,cAAc,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAEvC;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAiB,EAAE,CAAC;EAC1DW,OAAO,CAACC,GAAG,CAACL,KAAK,CAACM,KAAK,CAAC;EACxBZ,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,yCAAyC,EAAE;MAC/CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAET,KAAK,CAACM,KAAK;QAC5B,cAAc,EAAE;MAClB,CAAC;MACDI,IAAI,EAAE;IACR,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;MAC1CX,UAAU,CAACW,IAAI,CAAC;MAChBV,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAKZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC7BhB,OAAO,CAACiB,GAAG,CAAEC,QAAQ,IAAK;MACtB,oBACExB,OAAA,CAAAE,SAAA;QAAAoB,QAAA,gBACEtB,OAAA;UAAsBqB,SAAS,EAAC;QAAQ,GAA/BG,QAAQ,CAACC,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAA0B,eAAA7B,OAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACpD7B,OAAA;UAAAsB,QAAA,EAAKE,QAAQ,CAACM;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAAA7B,OAAA;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC9B7B,OAAA;UAAAsB,QAAA,EAAKE,QAAQ,CAACO,OAAO,CAACR,GAAG,CAAEQ,OAAO,IAAK;YACrC,oBACE/B,OAAA,CAAAE,SAAA;cAAAoB,QAAA,gBACEtB,OAAA;gBAAAsB,QAAA,EAAKS,OAAO,CAACC;cAAQ;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,eAAA7B,OAAA;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,eACjC7B,OAAA;gBAAAsB,QAAA,EAAKS,OAAO,CAACE;cAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,eAAA7B,OAAA;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM;YAAA,gBAC7B;UAEP,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM;MAAA,gBACP;IAEP,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAGV,CAAC;AAAAxB,EAAA,CAxCKF,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}