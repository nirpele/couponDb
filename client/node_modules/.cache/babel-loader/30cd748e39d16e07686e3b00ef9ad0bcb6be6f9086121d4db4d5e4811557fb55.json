{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport '../Design/App.css';\nimport { HomeCustomer } from './Customer/HomeCustomer';\nimport { HomeCompany } from './Company/HomeCompany';\nimport HomeAdmin from './Admin/HomeAdmin';\nimport { fetchCompanyIdByEmail, fetchCustomerIdByEmail, Login2 } from '../services/ServerService';\nimport { UserType } from '../Entitis.type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState(UserType.ADMINISTRATOR);\n  const [loginToken, setLoginToken] = useState(\"\");\n  const [logId, setLogId] = useState();\n  const login1 = useCallback(async event => {\n    event.preventDefault(); // prevent page refresh\n    const token = await Login2(email, password, userType);\n    setLoginToken(token);\n  }, [email, password, userType]);\n  const userHandler = () => {\n    if (loginToken === '') {\n      return null;\n    }\n    if (loginToken !== '' && userType === 'ADMINISTRATOR' && logId === undefined) {\n      console.log(loginToken);\n      return /*#__PURE__*/_jsxDEV(HomeAdmin, {\n        token: loginToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n    }\n    if (loginToken !== '' && userType === 'CUSTOMER' && logId === undefined) {\n      // Use the fetchCustomerIdByEmail function to get the customer ID\n      fetchCustomerIdByEmail(email).then(id => setLogId(id));\n      return /*#__PURE__*/_jsxDEV(HomeCustomer, {\n        token: loginToken,\n        id: logId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    }\n    if (loginToken !== '' && userType === 'COMPANY' && logId === undefined) {\n      fetchCompanyIdByEmail(email).then(id => setLogId(id));\n      return /*#__PURE__*/_jsxDEV(HomeCompany, {\n        token: loginToken,\n        id: logId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: loginToken === '' ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: login1,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"userType:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: userType,\n        onChange: event => setUserType(event.target.value),\n        children: Object.values(UserType).map(userType => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: userType,\n          children: userType\n        }, userType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 28\n    }, this) : userHandler()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"St5yoVBfcRkON/nuOEYXekRpXuo=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useCallback","HomeCustomer","HomeCompany","HomeAdmin","fetchCompanyIdByEmail","fetchCustomerIdByEmail","Login2","UserType","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","userType","setUserType","ADMINISTRATOR","loginToken","setLoginToken","logId","setLogId","login1","event","preventDefault","token","userHandler","undefined","console","log","fileName","_jsxFileName","lineNumber","columnNumber","then","id","className","children","onSubmit","type","value","onChange","target","Object","values","map","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/Login.tsx"],"sourcesContent":["import { useState, useCallback, FormEvent, useContext } from 'react';\nimport '../Design/App.css'\nimport { HomeCustomer } from './Customer/HomeCustomer';\nimport { HomeCompany } from './Company/HomeCompany';\nimport HomeAdmin from './Admin/HomeAdmin';\nimport { fetchCompanyIdByEmail, fetchCustomerIdByEmail, Login2 } from '../services/ServerService';\nimport { UserType } from '../Entitis.type';\nimport { CustomerContext } from '../contexts/AppContextCustomer';\n\n\n  \n  function Login(): JSX.Element {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [userType, setUserType] = useState<UserType>(UserType.ADMINISTRATOR);\n    const [loginToken, setLoginToken] = useState<string>(\"\");\n    const [logId, setLogId] = useState<number | undefined>();\n\n    \n    const login1 = useCallback(async (event: FormEvent<HTMLFormElement>): Promise<void> => {\n      event.preventDefault(); // prevent page refresh\n      const token = await Login2(email, password, userType);\n      setLoginToken(token);\n    }, [email, password, userType]);\n  \n    const userHandler = () => {\n      if (loginToken === '') {\n        return null;\n      }\n  \n      if (loginToken !== '' && userType === 'ADMINISTRATOR' && logId === undefined) {\n        console.log(loginToken)\n        return (\n          <HomeAdmin token={loginToken} />\n        )\n      }\n      if (loginToken !== '' && userType === 'CUSTOMER' && logId === undefined) {\n        // Use the fetchCustomerIdByEmail function to get the customer ID\n        fetchCustomerIdByEmail(email).then(id => setLogId(id));\n        return (<HomeCustomer token={loginToken} id={logId} />)\n      }\n      if (loginToken !== '' && userType === 'COMPANY' && logId === undefined) {\n        fetchCompanyIdByEmail(email).then(id => setLogId(id));\n        return <HomeCompany token={loginToken} id={logId} />;\n      }\n      return null;\n    }\n  return (\n\n    <div className=\"login\">\n      {loginToken === '' ? <form onSubmit={login1}>\n        <label>Email: </label>\n        <input type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} /><br />\n        <label>Password: </label>\n        <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} /><br />\n        <label>userType:</label>\n        <select value={userType} onChange={(event) => setUserType(event.target.value as UserType)}>\n          {Object.values(UserType).map((userType) => (\n            <option key={userType} value={userType}>\n              {userType}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Login</button>\n      </form>\n        :\n        userHandler()\n      }\n\n    </div>\n  );\n}\n\nexport default Login;\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}