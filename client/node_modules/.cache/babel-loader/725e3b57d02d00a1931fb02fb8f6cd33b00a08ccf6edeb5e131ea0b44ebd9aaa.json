{"ast":null,"code":"export async function fetchCustomers(token) {\n  try {\n    const res = await fetch('http://localhost:8080/admin/customers/all', {\n      method: 'GET',\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function login(token) {\n  //todo   \n}\nexport async function fetchCustomerIdByEmail(email) {\n  try {\n    const data = await fetch('http://localhost:8080/customer/findMyIdByEmail?email=' + email, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      method: 'GET'\n    });\n    const data_1 = await data.text();\n    return parseInt(data_1);\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n}\nexport async function fetchCompanyIdByEmail(email) {\n  try {\n    const data = await fetch('http://localhost:8080/company/findMyIdByEmail?email=' + email, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      method: 'GET'\n    });\n    const data_1 = await data.text();\n    return parseInt(data_1);\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n}","map":{"version":3,"names":["fetchCustomers","token","res","fetch","method","headers","mode","data","json","error","console","log","login","fetchCustomerIdByEmail","email","data_1","text","parseInt","undefined","fetchCompanyIdByEmail"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/services/ServerService.ts"],"sourcesContent":["export async function fetchCustomers(token:string){\r\n    try {\r\n    const res = await fetch('http://localhost:8080/admin/customers/all', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      mode: 'cors'\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\nexport function login(token:string){\r\n //todo   \r\n}\r\n\r\nexport async function fetchCustomerIdByEmail(email: string): Promise<number | undefined> {\r\n  try {\r\n    const data = await fetch('http://localhost:8080/customer/findMyIdByEmail?email='+email, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n\r\n      mode: 'cors',\r\n      method: 'GET',\r\n    });\r\n    const data_1 = await data.text();\r\n    return parseInt(data_1);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport async function fetchCompanyIdByEmail(email: string): Promise<number | undefined> {\r\n  try {\r\n    const data = await fetch('http://localhost:8080/company/findMyIdByEmail?email='+email, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n\r\n      mode: 'cors',\r\n      method: 'GET',\r\n    });\r\n    const data_1 = await data.text();\r\n    return parseInt(data_1);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}"],"mappings":"AAAA,OAAO,eAAeA,cAAcA,CAACC,KAAY,EAAC;EAC9C,IAAI;IACJ,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACnEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAEJ,KAAK;QACtB,cAAc,EAAE;MAClB,CAAC;MACDK,IAAI,EAAE;IACR,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE;IAC7B,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AACA,OAAO,SAASG,KAAKA,CAACX,KAAY,EAAC;EAClC;AAAA;AAGD,OAAO,eAAeY,sBAAsBA,CAACC,KAAa,EAA+B;EACvF,IAAI;IACF,MAAMP,IAAI,GAAG,MAAMJ,KAAK,CAAC,uDAAuD,GAACW,KAAK,EAAE;MACtFT,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,IAAI,EAAE,MAAM;MACZF,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMW,MAAM,GAAG,MAAMR,IAAI,CAACS,IAAI,EAAE;IAChC,OAAOC,QAAQ,CAACF,MAAM,CAAC;EACzB,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAOS,SAAS;EAClB;AACF;AAEA,OAAO,eAAeC,qBAAqBA,CAACL,KAAa,EAA+B;EACtF,IAAI;IACF,MAAMP,IAAI,GAAG,MAAMJ,KAAK,CAAC,sDAAsD,GAACW,KAAK,EAAE;MACrFT,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,IAAI,EAAE,MAAM;MACZF,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMW,MAAM,GAAG,MAAMR,IAAI,CAACS,IAAI,EAAE;IAChC,OAAOC,QAAQ,CAACF,MAAM,CAAC;EACzB,CAAC,CAAC,OAAON,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAOS,SAAS;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}