{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\Company\\\\CompanyUpdateCoupon.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Category } from '../../Entitis.type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyUpdateCoupon = props => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const couponId = parseInt(id);\n  const [coupon, setCoupon] = useState({\n    id: couponId,\n    category: Category.FOOD,\n    startDate: '',\n    endDate: '',\n    amount: 0,\n    price: 0,\n    image: ''\n  });\n  const updateCoupon = event => {\n    event.preventDefault();\n    console.log(props.token);\n    // check if required fields are filled in\n    if (!coupon.category || !coupon.price || !coupon.amount || !coupon.endDate) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n\n    // check if the price and amount are valid numbers\n    if (isNaN(coupon.price) || isNaN(coupon.amount)) {\n      alert('Price and amount must be valid numbers.');\n      return;\n    }\n    const endDate = new Date(coupon.endDate);\n    const today = new Date();\n    const otherDate = new Date(\"2030-04-01\"); // example of another date\n    if (endDate < today || endDate >= otherDate) {\n      alert('End date must be after today and before ' + otherDate.toDateString());\n      return;\n    }\n    fetch('http://localhost:8080/company/updateCoupon?companyId=' + props.id, {\n      method: 'POST',\n      headers: {\n        Authorization: props.token,\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify(coupon)\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CompanyupdateCuopon\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: coupon.category,\n        onChange: event => setCoupon(prev => ({\n          ...prev,\n          category: event.target.value\n        })),\n        children: Object.values(Category).map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Price: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"price\",\n        value: coupon.price,\n        onChange: event => setCoupon(prev => ({\n          ...prev,\n          price: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 141\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"amount\",\n        value: coupon.amount,\n        onChange: event => setCoupon(prev => ({\n          ...prev,\n          amount: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 144\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Date Coupon: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: coupon.endDate,\n        onChange: event => setCoupon(prev => ({\n          ...prev,\n          endDate: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 144\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: updateCoupon,\n        children: \"update company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyUpdateCoupon, \"HRPB3uzm1Q/BDVEo6zqPltG+AhQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CompanyUpdateCoupon;\nexport default CompanyUpdateCoupon;\nvar _c;\n$RefreshReg$(_c, \"CompanyUpdateCoupon\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","Category","jsxDEV","_jsxDEV","CompanyUpdateCoupon","props","_s","navigate","id","couponId","parseInt","coupon","setCoupon","category","FOOD","startDate","endDate","amount","price","image","updateCoupon","event","preventDefault","console","log","token","alert","isNaN","Date","today","otherDate","toDateString","fetch","method","headers","Authorization","mode","body","JSON","stringify","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","prev","target","Object","values","map","type","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/Company/CompanyUpdateCoupon.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Category, Coupon } from '../../Entitis.type';\r\ninterface Props {\r\n  token: string | undefined\r\n  id: number | undefined\r\n}\r\n\r\nconst CompanyUpdateCoupon = (props: Props) => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams<{ id: any }>();\r\n  const couponId = parseInt(id);\r\n  const [coupon, setCoupon] = useState<Coupon>(\r\n    {\r\n      id: couponId, category: Category.FOOD,\r\n      startDate: '',\r\n      endDate: '',\r\n      amount: 0,\r\n      price: 0,\r\n      image: ''\r\n    });\r\n\r\n\r\n  const updateCoupon = (event: React.MouseEvent): void => {\r\n    event.preventDefault();\r\n    console.log(props.token);\r\n      // check if required fields are filled in\r\n      if (!coupon.category || !coupon.price || !coupon.amount || !coupon.endDate) {\r\n        alert('Please fill in all required fields.');\r\n        return;\r\n      }\r\n    \r\n      // check if the price and amount are valid numbers\r\n      if (isNaN(coupon.price) || isNaN(coupon.amount)) {\r\n        alert('Price and amount must be valid numbers.');\r\n        return;\r\n      }\r\n\r\n      const endDate = new Date(coupon.endDate);\r\n      const today = new Date();\r\n      const otherDate = new Date(\"2030-04-01\"); // example of another date\r\n      if (endDate < today || endDate >= otherDate) {\r\n        alert('End date must be after today and before ' + otherDate.toDateString());\r\n        return;\r\n      }\r\n      \r\n    fetch('http://localhost:8080/company/updateCoupon?companyId=' + props.id, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: props.token!,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      mode: 'cors',\r\n      body: JSON.stringify(coupon),\r\n    }).catch((error) => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <div className='CompanyupdateCuopon'>\r\n      <button onClick={() => navigate(-1)}>Back</button> {/* add \"Back\" button */}\r\n      <form>\r\n        <label>Category:</label>\r\n        <select value={coupon.category} onChange={(event) => setCoupon((prev: any) => ({ ...prev, category: event.target.value as Category }))}>\r\n          {Object.values(Category).map((category) => (\r\n            <option key={category} value={category}>\r\n              {category}\r\n            </option>\r\n          ))}\r\n        </select><br />\r\n        <label>Price: </label>\r\n        <input type=\"price\" value={coupon.price} onChange={(event) => setCoupon((prev: any) => ({ ...prev, price: event.target.value }))} /><br />\r\n        <label>Amount: </label>\r\n        <input type=\"amount\" value={coupon.amount} onChange={(event) => setCoupon((prev: any) => ({ ...prev, amount: event.target.value }))} /><br />\r\n        <label>End Date Coupon: </label>\r\n        <input type=\"date\" value={coupon.endDate} onChange={(event) => setCoupon((prev: any) => ({ ...prev, endDate: event.target.value }))} /><br />\r\n        <button type=\"button\" onClick={updateCoupon}>update company</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompanyUpdateCoupon"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}