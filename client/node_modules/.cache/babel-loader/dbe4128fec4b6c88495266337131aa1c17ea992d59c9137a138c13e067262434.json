{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\App\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Login from \"../Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [loginToken, setLoginToken] = useState('');\n\n  // useEffect(()=>{\n  //     if(loginToken){           \n  //        fetchCustomers(loginToken)\n  //         .then((customers )=>setCustomers(customers))\n  //     }\n  // },[loginToken]);\n  return (\n    /*#__PURE__*/\n    // <CustomerContext.Provider value={{customers,loginToken, setLoginToken}}>\n    _jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this)\n    // </CustomerContext.Provider>\n  );\n}\n_s(App, \"XBt4x30FMrLuHh2ax0aX1hZ/4iU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Login","jsxDEV","_jsxDEV","App","_s","customers","setCustomers","loginToken","setLoginToken","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/App/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Login from \"../Login\";\r\nimport {CustomerContext } from '../../contexts/AppContextCustomer';\r\nimport { fetchCustomers } from \"../../services/ServerService\";\r\n\r\nexport default function App(){\r\n    const [customers, setCustomers] = useState([]);\r\n    const [loginToken,setLoginToken] = useState('');\r\n\r\n   // useEffect(()=>{\r\n   //     if(loginToken){           \r\n    //        fetchCustomers(loginToken)\r\n   //         .then((customers )=>setCustomers(customers))\r\n   //     }\r\n   // },[loginToken]);\r\n    return (\r\n           // <CustomerContext.Provider value={{customers,loginToken, setLoginToken}}>\r\n                    <Login />\r\n           // </CustomerContext.Provider>\r\n        )\r\n}"],"mappings":";;AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI7B,eAAe,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,UAAU,EAACC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA;EACC;EACD;EACA;EACA;EACC;IAAA;IACO;IACSG,OAAA,CAACF,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;IACf;EAAA;AAEX;AAACR,EAAA,CAfuBD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}