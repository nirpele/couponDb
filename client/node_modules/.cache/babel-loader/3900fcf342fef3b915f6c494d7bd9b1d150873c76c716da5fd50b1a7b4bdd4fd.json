{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext } from \"react\";\nexport const CustomerContext = /*#__PURE__*/createContext({\n  loginToken: \"\",\n  setLoginToken: () => {}\n});\nexport function useAuthState() {\n  _s();\n  const context = React.useContext(AuthStateContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthState must be used within a AuthProvider\");\n  }\n  return context;\n}\n_s(useAuthState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useAuthDispatch() {\n  _s2();\n  const context = React.useContext(AuthDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useAuthDispatch must be used within a AuthProvider\");\n  }\n  return context;\n}\n_s2(useAuthDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst AuthStateContext = React.createContext();\nconst AuthDispatchContext = React.createContext();\n\n// export const CustomerProvider: React.FC<Props> = ({ children, token }): ReactElement => {\n//   const [customers, setCustomers] = useState<Array<Customer>>([]);\n//    useEffect(() => {\n//       fetch('http://localhost:8080/admin/customers/all', {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': token,\n//           'Content-Type': 'application/json',\n//         },\n//         mode: 'cors'\n//       })\n//         .then((res) => res.json())\n//         .then((data) => {\n//           setCustomers(data);\n//         })\n//         .catch((error) => {\n//           console.log(error)\n//         });\n\n//   }, [token]);\n\n//   return (\n//     <div className=\"n\">\n//     <CustomerContext.Provider value={customers}>\n//       {children} \n//     </CustomerContext.Provider>\n//     </div>\n//   );\n// };\n\n//export const UseCustomerContext = (): Array<Customer> => useContext(CustomerContext);","map":{"version":3,"names":["createContext","CustomerContext","loginToken","setLoginToken","useAuthState","_s","context","React","useContext","AuthStateContext","undefined","Error","useAuthDispatch","_s2","AuthDispatchContext"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/contexts/AppContextCustomer.tsx"],"sourcesContent":["import { createContext, ReactElement, useContext, useEffect, useState } from \"react\";\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n  token: string\r\n  children: React.ReactNode\r\n};\r\ninterface IAppContext{\r\n  loginToken:string;\r\n  setLoginToken:(loginToken:string)=>void|string;\r\n}\r\n\r\nexport const CustomerContext = createContext<IAppContext>({loginToken:\"\",setLoginToken:()=>{}});\r\n\r\nexport function useAuthState() {\r\n  const context = React.useContext(AuthStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuthState must be used within a AuthProvider\");\r\n  }\r\n \r\n  return context;\r\n}\r\n \r\nexport function useAuthDispatch() {\r\n  const context = React.useContext(AuthDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuthDispatch must be used within a AuthProvider\");\r\n  }\r\n \r\n  return context;\r\n}\r\nconst AuthStateContext = React.createContext();\r\nconst AuthDispatchContext = React.createContext();\r\n\r\n\r\n\r\n// export const CustomerProvider: React.FC<Props> = ({ children, token }): ReactElement => {\r\n//   const [customers, setCustomers] = useState<Array<Customer>>([]);\r\n//    useEffect(() => {\r\n//       fetch('http://localhost:8080/admin/customers/all', {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': token,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         mode: 'cors'\r\n//       })\r\n//         .then((res) => res.json())\r\n//         .then((data) => {\r\n//           setCustomers(data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(error)\r\n//         });\r\n    \r\n//   }, [token]);\r\n\r\n//   return (\r\n//     <div className=\"n\">\r\n//     <CustomerContext.Provider value={customers}>\r\n//       {children} \r\n//     </CustomerContext.Provider>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//export const UseCustomerContext = (): Array<Customer> => useContext(CustomerContext);"],"mappings":";;AAAA,SAASA,aAAa,QAAuD,OAAO;AAcpF,OAAO,MAAMC,eAAe,gBAAGD,aAAa,CAAc;EAACE,UAAU,EAAC,EAAE;EAACC,aAAa,EAACA,CAAA,KAAI,CAAC;AAAC,CAAC,CAAC;AAE/F,OAAO,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,OAAO,GAAGC,KAAK,CAACC,UAAU,CAACC,gBAAgB,CAAC;EAClD,IAAIH,OAAO,KAAKI,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACpE;EAEA,OAAOL,OAAO;AAChB;AAACD,EAAA,CAPeD,YAAY;AAS5B,OAAO,SAASQ,eAAeA,CAAA,EAAG;EAAAC,GAAA;EAChC,MAAMP,OAAO,GAAGC,KAAK,CAACC,UAAU,CAACM,mBAAmB,CAAC;EACrD,IAAIR,OAAO,KAAKI,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EAEA,OAAOL,OAAO;AAChB;AAACO,GAAA,CAPeD,eAAe;AAQ/B,MAAMH,gBAAgB,GAAGF,KAAK,CAACP,aAAa,EAAE;AAC9C,MAAMc,mBAAmB,GAAGP,KAAK,CAACP,aAAa,EAAE;;AAIjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}