{"ast":null,"code":"// export async function fetchCustomers(token:string){\n//     try {\n//     const res = await fetch('http://localhost:8080/admin/customers/all', {\n//       method: 'GET',\n//       headers: {\n//         'Authorization': token,\n//         'Content-Type': 'application/json',\n//       },\n//       mode: 'cors'\n//     });\n//     const data = await res.json();\n//     return data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\nexport function login(token) {\n  //todo   \n}\nexport async function fetchCustomerIdByEmail(email) {\n  try {\n    const data = await fetch('http://localhost:8080/customer/findMyIdByEmail?email=' + email, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      method: 'GET'\n    });\n    const data_1 = await data.text();\n    return parseInt(data_1);\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n}\nexport async function fetchCompanyIdByEmail(email) {\n  try {\n    const data = await fetch('http://localhost:8080/company/findMyIdByEmail?email=' + email, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      method: 'GET'\n    });\n    const data_1 = await data.text();\n    return parseInt(data_1);\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n}","map":{"version":3,"names":["login","token","fetchCustomerIdByEmail","email","data","fetch","headers","mode","method","data_1","text","parseInt","error","console","log","undefined","fetchCompanyIdByEmail"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/services/ServerService.ts"],"sourcesContent":["// export async function fetchCustomers(token:string){\r\n//     try {\r\n//     const res = await fetch('http://localhost:8080/admin/customers/all', {\r\n//       method: 'GET',\r\n//       headers: {\r\n//         'Authorization': token,\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       mode: 'cors'\r\n//     });\r\n//     const data = await res.json();\r\n//     return data;\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// }\r\n\r\nexport function login(token:string){\r\n //todo   \r\n}\r\n\r\nexport async function fetchCustomerIdByEmail(email: string): Promise<number | undefined> {\r\n  try {\r\n    const data = await fetch('http://localhost:8080/customer/findMyIdByEmail?email='+email, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n\r\n      mode: 'cors',\r\n      method: 'GET',\r\n    });\r\n    const data_1 = await data.text();\r\n    return parseInt(data_1);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport async function fetchCompanyIdByEmail(email: string): Promise<number | undefined> {\r\n  try {\r\n    const data = await fetch('http://localhost:8080/company/findMyIdByEmail?email='+ email, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      mode: 'cors',\r\n      method: 'GET',\r\n    });\r\n    const data_1 = await data.text();\r\n    return parseInt(data_1);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASA,KAAKA,CAACC,KAAY,EAAC;EAClC;AAAA;AAGD,OAAO,eAAeC,sBAAsBA,CAACC,KAAa,EAA+B;EACvF,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uDAAuD,GAACF,KAAK,EAAE;MACtFG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MAEDC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG,MAAML,IAAI,CAACM,IAAI,EAAE;IAChC,OAAOC,QAAQ,CAACF,MAAM,CAAC;EACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAOG,SAAS;EAClB;AACF;AAEA,OAAO,eAAeC,qBAAqBA,CAACb,KAAa,EAA+B;EACtF,IAAI;IACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,sDAAsD,GAAEF,KAAK,EAAE;MACtFG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE,MAAM;MACZC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,MAAMC,MAAM,GAAG,MAAML,IAAI,CAACM,IAAI,EAAE;IAChC,OAAOC,QAAQ,CAACF,MAAM,CAAC;EACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAOG,SAAS;EAClB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}