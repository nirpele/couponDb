{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\Login.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback, useContext } from 'react';\nimport '../Design/App.css';\nimport { HomeCustomer } from './Customer/HomeCustomer';\nimport { HomeCompany } from './Company/HomeCompany';\nimport HomeAdmin from './Admin/HomeAdmin';\nimport { CustomerContext } from '../contexts/AppContextCustomer';\nimport { fetchCompanyIdByEmail, fetchCustomerIdByEmail } from '../services/ServerService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState('');\n  const {\n    loginToken,\n    setLoginToken\n  } = useContext(CustomerContext);\n  const [logId, setLogId] = useState();\n  const login = useCallback(async event => {\n    event.preventDefault(); // prevent page refresh\n    await fetch('http://localhost:8080/login', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        userType: userType\n      }),\n      mode: 'cors',\n      method: 'POST'\n    }).then(data => data.text()).then(token => setLoginToken(token)).catch(error => console.log(error));\n  }, [email, password, userType, setLoginToken]);\n  const userHandler = () => {\n    if (loginToken !== '' && userType === 'ADMINISTRATOR') {\n      return /*#__PURE__*/_jsxDEV(HomeAdmin, {\n        token: loginToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n    if (loginToken !== '' && userType === 'CUSTOMER') {\n      // Use the fetchCustomerIdByEmail function to get the customer ID\n      fetchCustomerIdByEmail(email).then(id => setLogId(id));\n      return /*#__PURE__*/_jsxDEV(HomeCustomer, {\n        token: loginToken,\n        id: logId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }, this);\n    }\n    if (loginToken !== '' && userType === 'COMPANY') {\n      fetchCompanyIdByEmail(email).then(id => setLogId(id));\n      return /*#__PURE__*/_jsxDEV(HomeCompany, {\n        token: loginToken,\n        id: logId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    }\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: loginToken === '' ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: login,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 96\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"userType\",\n        value: userType,\n        onChange: event => setUserType(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 28\n    }, this) : userHandler()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"lUmCxCsppDVT99WyvuDm7mw6Dug=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useCallback","useContext","HomeCustomer","HomeCompany","HomeAdmin","CustomerContext","fetchCompanyIdByEmail","fetchCustomerIdByEmail","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","userType","setUserType","loginToken","setLoginToken","logId","setLogId","login","event","preventDefault","fetch","headers","body","JSON","stringify","mode","method","then","data","text","token","catch","error","console","log","userHandler","fileName","_jsxFileName","lineNumber","columnNumber","id","className","children","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/Login.tsx"],"sourcesContent":["import { useState, useCallback, FormEvent, useContext } from 'react';\nimport '../Design/App.css'\nimport { HomeCustomer } from './Customer/HomeCustomer';\nimport { HomeCompany } from './Company/HomeCompany';\nimport HomeAdmin from './Admin/HomeAdmin';\nimport { CustomerContext } from '../contexts/AppContextCustomer';\nimport { fetchCompanyIdByEmail, fetchCustomerIdByEmail } from '../services/ServerService';\n\n\nfunction Login(): JSX.Element {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userType, setUserType] = useState('');\n  const { loginToken, setLoginToken } = useContext(CustomerContext);\n  const [logId, setLogId] = useState<number | undefined>();\n\n  const login = useCallback(async (event: FormEvent<HTMLFormElement>): Promise<void> => {\n    event.preventDefault(); // prevent page refresh\n    await fetch('http://localhost:8080/login', {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        userType: userType,\n      }),\n      mode: 'cors',\n      method: 'POST',\n    })\n      .then((data) => data.text())\n      .then((token) => setLoginToken(token))\n      .catch((error) => console.log(error));\n  }, [email, password, userType, setLoginToken]);\n\n  const userHandler = () => {\n    if (loginToken !== '' && userType === 'ADMINISTRATOR') {\n      return (\n        <HomeAdmin token={loginToken} />\n      )\n    }\n\n    if (loginToken !== '' && userType === 'CUSTOMER') {\n      // Use the fetchCustomerIdByEmail function to get the customer ID\n      fetchCustomerIdByEmail(email).then(id => setLogId(id));\n      return (<HomeCustomer token={loginToken} id={logId} />)\n    }\n    if (loginToken !== '' && userType === 'COMPANY') {\n      fetchCompanyIdByEmail(email).then(id => setLogId(id));\n      return <HomeCompany token={loginToken} id={logId} />;\n    }\n    return ;\n  }\n\n  return (\n\n    <div className=\"login\">\n      {loginToken === '' ? <form onSubmit={login}>\n        <label>Email: </label>\n        <input type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} /><br />\n        <label>Password: </label>\n        <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} /><br />\n        <label>User Type: </label>\n        <input type=\"userType\" value={userType} onChange={(event) => setUserType(event.target.value)} /><br />\n        <button type=\"submit\">Login</button>\n      </form>\n        :\n        userHandler()\n      }\n\n    </div>\n  );\n}\n\nexport default Login;\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}