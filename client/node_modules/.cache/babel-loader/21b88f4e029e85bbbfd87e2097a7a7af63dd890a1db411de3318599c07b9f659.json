{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { CustomerContext } from '../contexts/AppContextCustomer';\nexport async function fetchCustomers(token) {\n  try {\n    const res = await fetch(\"http://localhost:8080/admin/customers/all\", {\n      method: \"GET\",\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      mode: \"cors\"\n    });\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function Login2(email, password, userType) {\n  _s();\n  const {\n    loginToken,\n    setLoginToken\n  } = useContext(CustomerContext);\n  console.log('aa');\n  try {\n    await fetch('http://localhost:8080/login', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        userType: userType\n      }),\n      mode: 'cors',\n      method: 'POST'\n    }).then(data => data.text()).then(token => {\n      setLoginToken(token);\n      console.log(token);\n      return loginToken;\n    }).catch(error => {\n      console.log(error);\n      return error;\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n_s(Login2, \"uYQ8JG82WCR8ySKBKMPEZVsfBp0=\");\n_c = Login2;\nexport async function fetchCustomerIdByEmail(email) {\n  try {\n    const data = await fetch(\"http://localhost:8080/customer/findMyIdByEmail?email=\" + email, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      mode: \"cors\",\n      method: \"GET\"\n    });\n    const data_1 = await data.text();\n    return parseInt(data_1);\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n}\nexport async function fetchCompanyIdByEmail(email) {\n  try {\n    const data = await fetch(\"http://localhost:8080/company/findMyIdByEmail?email=\" + email, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      mode: \"cors\",\n      method: \"GET\"\n    });\n    const data_1 = await data.text();\n\n    // localStorage.setItem('id', String(data_1));\n\n    return parseInt(data_1);\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n}\nexport async function PurchaseCouponByCustomer(token) {\n  try {\n    const data = await fetch(\"http://localhost:8080/company/findMyIdByEmail?email=\" + email, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      mode: \"cors\",\n      method: \"GET\"\n    });\n    const data_1 = await data.text();\n\n    // localStorage.setItem('id', String(data_1));\n\n    return parseInt(data_1);\n  } catch (error) {\n    console.log(error);\n    return undefined;\n  }\n}\n_c2 = PurchaseCouponByCustomer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Login2\");\n$RefreshReg$(_c2, \"PurchaseCouponByCustomer\");","map":{"version":3,"names":["useContext","CustomerContext","fetchCustomers","token","res","fetch","method","headers","Authorization","mode","data","json","error","console","log","Login2","email","password","userType","_s","loginToken","setLoginToken","body","JSON","stringify","then","text","catch","_c","fetchCustomerIdByEmail","data_1","parseInt","undefined","fetchCompanyIdByEmail","PurchaseCouponByCustomer","_c2","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/services/ServerService.ts"],"sourcesContent":["import { useContext } from 'react';\r\nimport { CustomerContext } from '../contexts/AppContextCustomer';\r\nimport { UserType } from './../Entitis.type';\r\n\r\n\r\nexport async function fetchCustomers(token: string) {\r\n  try {\r\n    const res = await fetch(\"http://localhost:8080/admin/customers/all\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      mode: \"cors\",\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport async function Login2(email: string, password: string, userType: UserType): Promise<any> {\r\n  const { loginToken,setLoginToken } = useContext(CustomerContext);\r\n  console.log('aa')\r\n  try {\r\n    await fetch('http://localhost:8080/login', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        userType: userType,\r\n      }),\r\n      mode: 'cors',\r\n      method: 'POST',\r\n    })\r\n    .then((data) => data.text())\r\n    .then((token) => {\r\n      setLoginToken(token);\r\n      console.log(token)\r\n      return loginToken;\r\n    })\r\n    .catch((error) => {console.log(error)\r\n    return error;\r\n    })\r\n}catch(error){\r\n console.log(error)\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport async function fetchCustomerIdByEmail(\r\n  email: string\r\n): Promise<number | undefined> {\r\n  try {\r\n    const data = await fetch(\r\n      \"http://localhost:8080/customer/findMyIdByEmail?email=\" + email,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n\r\n        mode: \"cors\",\r\n        method: \"GET\",\r\n      }\r\n    );\r\n    const data_1 = await data.text();\r\n    return parseInt(data_1);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\n\r\nexport async function fetchCompanyIdByEmail(\r\n  email: string\r\n): Promise<number | undefined> {\r\n  try {\r\n    const data = await fetch(\r\n      \"http://localhost:8080/company/findMyIdByEmail?email=\" + email,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        mode: \"cors\",\r\n        method: \"GET\",\r\n      }\r\n    );\r\n    const data_1 = await data.text();\r\n\r\n    // localStorage.setItem('id', String(data_1));\r\n    \r\n    return parseInt(data_1);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport async function PurchaseCouponByCustomer(token: string): Promise<number | undefined> {\r\n  try {\r\n    const data = await fetch(\r\n      \"http://localhost:8080/company/findMyIdByEmail?email=\" + email,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        mode: \"cors\",\r\n        method: \"GET\",\r\n      }\r\n    );\r\n    const data_1 = await data.text();\r\n\r\n    // localStorage.setItem('id', String(data_1));\r\n    \r\n    return parseInt(data_1);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}