{"ast":null,"code":"import { createContext } from \"react\";\nexport const CustomerProvider = () => {};\n_c = CustomerProvider;\nexport const CustomerContext = /*#__PURE__*/createContext([]);\n// export const CustomerContext = createContext<Array<Customer>>([]);\n\n// export const CustomerProvider: React.FC<Props> = ({ children, token }): ReactElement => {\n//   const [customers, setCustomers] = useState<Array<Customer>>([]);\n\n//    useEffect(() => {\n//       fetch('http://localhost:8080/admin/customers/all', {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': token,\n//           'Content-Type': 'application/json',\n//         },\n//         mode: 'cors'\n//       })\n//         .then((res) => res.json())\n//         .then((data) => {\n//           setCustomers(data);\n//         })\n//         .catch((error) => {\n//           console.log(error)\n//         });\n\n//   }, [token]);\n\n//   return (\n//     <div className=\"n\">\n//     <CustomerContext.Provider value={customers}>\n//       <>\n//       {children}\n//       </>\n//     </CustomerContext.Provider>\n//     </div>\n//   );\n// };\n\n// export const UseCustomerContext = (): Array<Customer> => useContext(CustomerContext);\nvar _c;\n$RefreshReg$(_c, \"CustomerProvider\");","map":{"version":3,"names":["createContext","CustomerProvider","_c","CustomerContext","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/contexts/AppContextCustomer.tsx"],"sourcesContent":["import { createContext, ReactElement, useContext, useEffect, useState } from \"react\";\r\nimport { Customer } from \"../Entitis.type\";\r\n\r\n\r\n\r\ntype Props = {\r\n  token: string\r\n  children: React.ReactNode\r\n};\r\nexport const CustomerProvider=()=>{\r\n  \r\n}\r\nexport const CustomerContext = createContext<Array<Customer>>([]);\r\n// export const CustomerContext = createContext<Array<Customer>>([]);\r\n\r\n// export const CustomerProvider: React.FC<Props> = ({ children, token }): ReactElement => {\r\n//   const [customers, setCustomers] = useState<Array<Customer>>([]);\r\n\r\n//    useEffect(() => {\r\n//       fetch('http://localhost:8080/admin/customers/all', {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': token,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         mode: 'cors'\r\n//       })\r\n//         .then((res) => res.json())\r\n//         .then((data) => {\r\n//           setCustomers(data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(error)\r\n//         });\r\n    \r\n//   }, [token]);\r\n\r\n//   return (\r\n//     <div className=\"n\">\r\n//     <CustomerContext.Provider value={customers}>\r\n//       <>\r\n//       {children}\r\n//       </>\r\n//     </CustomerContext.Provider>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export const UseCustomerContext = (): Array<Customer> => useContext(CustomerContext);\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAuD,OAAO;AASpF,OAAO,MAAMC,gBAAgB,GAACA,CAAA,KAAI,CAElC,CAAC;AAAAC,EAAA,GAFYD,gBAAgB;AAG7B,OAAO,MAAME,eAAe,gBAAGH,aAAa,CAAkB,EAAE,CAAC;AACjE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAE,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}