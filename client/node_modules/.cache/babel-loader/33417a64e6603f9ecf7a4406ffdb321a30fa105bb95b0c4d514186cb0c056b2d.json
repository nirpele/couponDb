{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nirg\\\\Desktop\\\\spring\\\\cuoponProject\\\\cuoponProject\\\\client\\\\src\\\\Components\\\\Admin\\\\GetAllCompanys.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../../Design/GetAllCompanys.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetAllCompanys = props => {\n  _s();\n  const navigate = useNavigate();\n  // //context.type\n  const [company, setCompany] = useState([]);\n  console.log(props.token);\n  useEffect(() => {\n    fetch('http://localhost:8080/admin/company/all', {\n      method: 'GET',\n      headers: {\n        'Authorization': props.token,\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(res => res.json()).then(data => {\n      setCompany(data);\n      console.log(data); // log response data to console\n    }).catch(error => console.log(error));\n  }, []); // add empty array to run useEffect only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"getAllCompanys\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), \" \", company.map(companys => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company\",\n        children: [\"category: price\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"company-name\",\n          children: companys.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coupons\",\n          children: companys.coupons.map(coupons => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coupon\",\n              children: [coupons.category && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category\",\n                children: coupons.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 44\n              }, this), coupons.price && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"price\",\n                children: coupons.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this)]\n            }, coupons.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, companys.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this);\n};\n_s(GetAllCompanys, \"eqiG0VYVoFJvFRBYAL76rr1c/KY=\", false, function () {\n  return [useNavigate];\n});\n_c = GetAllCompanys;\nexport default GetAllCompanys;\nvar _c;\n$RefreshReg$(_c, \"GetAllCompanys\");","map":{"version":3,"names":["useState","useEffect","useNavigate","jsxDEV","_jsxDEV","GetAllCompanys","props","_s","navigate","company","setCompany","console","log","token","fetch","method","headers","mode","then","res","json","data","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","companys","name","coupons","category","price","id","_c","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/Components/Admin/GetAllCompanys.tsx"],"sourcesContent":["import { Company } from '../../Entitis.type';\r\nimport { useState, useEffect } from 'react';\r\nimport '../../Design/GetAllCompanys.css'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\ntype Props = {\r\n  token: string\r\n};\r\nconst GetAllCompanys = (props: Props) => {\r\n  const navigate = useNavigate();\r\n  // //context.type\r\n  const [company, setCompany] = useState<Array<Company>>([]);\r\n  console.log(props.token);\r\n  \r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/admin/company/all', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': props.token,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      mode: 'cors'\r\n    }).then((res) => res.json()).then((data) => {\r\n      setCompany(data)\r\n      console.log(data); // log response data to console\r\n    }).catch((error) => console.log(error));\r\n  }, []); // add empty array to run useEffect only once on component mount\r\n\r\n  \r\n    return (\r\n      <div className='getAllCompanys'>\r\n            <button onClick={() => navigate(-1)}>Back</button> {/* add \"Back\" button */}\r\n        {company.map((companys) => {\r\n          return (\r\n            \r\n            <div key={companys.id} className='company'>\r\n              category:\r\n              price\r\n              <div className='company-name'>{companys.name}</div>\r\n              <div className='coupons'>\r\n                {companys.coupons.map((coupons) => {\r\n                  return (\r\n                    <div key={coupons.id} className='coupon'>\r\n                      {coupons.category && <div className='category'>{coupons.category}</div>}\r\n                      {coupons.price && <div className='price'>{coupons.price}</div>}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n  )\r\n}\r\n\r\nexport default GetAllCompanys;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}