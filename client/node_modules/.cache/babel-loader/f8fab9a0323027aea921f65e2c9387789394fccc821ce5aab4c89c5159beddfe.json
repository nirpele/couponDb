{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nexport const CustomerProvider = props => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/admin/customers/all', {\n      method: 'GET',\n      headers: {\n        'Authorization': props.token,\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(res => res.json()).then(data => {\n      setCustomers(data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return {\n    customers\n  };\n};\n_s(CustomerProvider, \"h68b3hq6gv818inqQQjo1WvNv/E=\");\n_c = CustomerProvider;\nexport const CustomerContext = /*#__PURE__*/createContext(CustomerProvider);\n_c2 = CustomerContext;\nexport const useContextC = useContext(C);\n// export const CustomerContext = createContext<Array<Customer>>([]);\n\n// export const CustomerProvider: React.FC<Props> = ({ children, token }): ReactElement => {\n//   const [customers, setCustomers] = useState<Array<Customer>>([]);\n\n//    useEffect(() => {\n//       fetch('http://localhost:8080/admin/customers/all', {\n//         method: 'GET',\n//         headers: {\n//           'Authorization': token,\n//           'Content-Type': 'application/json',\n//         },\n//         mode: 'cors'\n//       })\n//         .then((res) => res.json())\n//         .then((data) => {\n//           setCustomers(data);\n//         })\n//         .catch((error) => {\n//           console.log(error)\n//         });\n\n//   }, [token]);\n\n//   return (\n//     <div className=\"n\">\n//     <CustomerContext.Provider value={customers}>\n//       <>\n//       {children}\n//       </>\n//     </CustomerContext.Provider>\n//     </div>\n//   );\n// };\n\n// export const UseCustomerContext = (): Array<Customer> => useContext(CustomerContext);\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomerProvider\");\n$RefreshReg$(_c2, \"CustomerContext\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","CustomerProvider","props","_s","customers","setCustomers","fetch","method","headers","token","mode","then","res","json","data","catch","error","console","log","_c","CustomerContext","_c2","useContextC","C","$RefreshReg$"],"sources":["C:/Users/nirg/Desktop/spring/cuoponProject/cuoponProject/client/src/contexts/AppContextCustomer.tsx"],"sourcesContent":["import { createContext, ReactElement, useContext, useEffect, useState } from \"react\";\r\nimport { Customer } from \"../Entitis.type\";\r\n\r\n\r\n\r\ntype Props = {\r\n  token: string\r\n};\r\nexport const CustomerProvider=(props: Props)=>{\r\n  const [customers, setCustomers] = useState<Array<Customer>>([]);\r\n  useEffect(() => {\r\n          fetch('http://localhost:8080/admin/customers/all', {\r\n            method: 'GET',\r\n            headers: {\r\n              'Authorization':props.token,\r\n             'Content-Type': 'application/json',\r\n            },\r\n          mode: 'cors'\r\n          })\r\n             .then((res) => res.json())\r\n             .then((data) => {\r\n               setCustomers(data)})\r\n             .catch((error) => {\r\n               console.log(error)\r\n            });\r\n        \r\n       }, []);\r\n      \r\n       return (\r\n        {customers}\r\n       )\r\n}\r\nexport const CustomerContext = createContext(CustomerProvider);\r\nexport const useContextC=useContext(C)\r\n// export const CustomerContext = createContext<Array<Customer>>([]);\r\n\r\n// export const CustomerProvider: React.FC<Props> = ({ children, token }): ReactElement => {\r\n//   const [customers, setCustomers] = useState<Array<Customer>>([]);\r\n\r\n//    useEffect(() => {\r\n//       fetch('http://localhost:8080/admin/customers/all', {\r\n//         method: 'GET',\r\n//         headers: {\r\n//           'Authorization': token,\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         mode: 'cors'\r\n//       })\r\n//         .then((res) => res.json())\r\n//         .then((data) => {\r\n//           setCustomers(data);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.log(error)\r\n//         });\r\n    \r\n//   }, [token]);\r\n\r\n//   return (\r\n//     <div className=\"n\">\r\n//     <CustomerContext.Provider value={customers}>\r\n//       <>\r\n//       {children}\r\n//       </>\r\n//     </CustomerContext.Provider>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export const UseCustomerContext = (): Array<Customer> => useContext(CustomerContext);\r\n"],"mappings":";AAAA,SAASA,aAAa,EAAgBC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAQpF,OAAO,MAAMC,gBAAgB,GAAEC,KAAY,IAAG;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAkB,EAAE,CAAC;EAC/DD,SAAS,CAAC,MAAM;IACRO,KAAK,CAAC,2CAA2C,EAAE;MACjDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAACN,KAAK,CAACO,KAAK;QAC5B,cAAc,EAAE;MACjB,CAAC;MACHC,IAAI,EAAE;IACN,CAAC,CAAC,CACEC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdT,YAAY,CAACS,IAAI,CAAC;IAAA,CAAC,CAAC,CACrBC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACrB,CAAC,CAAC;EAEP,CAAC,EAAE,EAAE,CAAC;EAEN,OACC;IAACZ;EAAS,CAAC;AAEnB,CAAC;AAAAD,EAAA,CAvBYF,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AAwB7B,OAAO,MAAMmB,eAAe,gBAAGvB,aAAa,CAACI,gBAAgB,CAAC;AAACoB,GAAA,GAAlDD,eAAe;AAC5B,OAAO,MAAME,WAAW,GAACxB,UAAU,CAACyB,CAAC,CAAC;AACtC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAJ,EAAA,EAAAE,GAAA;AAAAG,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}